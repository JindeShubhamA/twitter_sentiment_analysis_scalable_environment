version: '3'

networks:
  elasticsearch-proc_elastic:
    external: true

services:
  # Do not name it spark-master, this will cause an environment variable clash in kubernetes, don't ask me how I know this :(
  # "So, for our service spark-master, kubernetes would generate an env variable called SPARK_MASTER_PORT=tcp://100.68.168.187:8080, but in turn SPARK_MASTER_PORT was an internal variable for APACHE SPARK!"
  spark-leader:
    image: docker.io/bitnami/spark:3.0.1
    hostname: spark-leader
    networks:
      - elasticsearch-proc_elastic
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'

  spark-worker:
    image: docker.io/bitnami/spark:3.0.1
    # we want the leader to be done before doing the workers
    depends_on:
      - spark-leader
    deploy:
      replicas: 2
    networks:
      - elasticsearch-proc_elastic
#    ports:
#      - '8081:8081'
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-leader:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no